import pandas as pd

input_file = r"C:\Users\Eric\Desktop\Novus Initium\Ars Discendi\TFG\ROSTER_19Apr2025.csv"

#rids = [
#   4004, 4005, 4007, 4012, 4022, 4036, 4051, 4054, 4059, 4063, 4067, 4072, 4073, 4085, 4102, 4127, 4128, 4133, 4134, 4143, 4146, 4149, 4157, 4159, 4160, 4168, 4175, 4184, 4185, 4186, 4188, 4199, 4202, 4205, 4206, 4212, 4216, 4217, 4220, 4226, 4232, 4235, 4237, 4241, 4245, 4256, 4259, 4260, 4268, 4271, 4272, 4274, 4281, 4285, 4297, 4299, 4301, 4309, 4310, 4312, 4327, 4328, 4331, 4332, 4351, 4356, 4360, 4380, 4383, 4390, 4392, 4404, 4405, 4415, 4417, 4419, 4420, 4431, 4434, 4438, 4443, 4445, 4447, 4455, 4463, 4465, 4467, 4468, 4473, 4475, 4476, 4480, 4498, 4512, 4513, 4514, 4517, 4522, 4530, 4536, 4539, 4540, 4547, 4553, 4556, 4557, 4565, 4571, 4575, 4594, 4597, 4601, 4603, 4610, 4613, 4614, 4621, 4623, 4624, 4635, 4659, 4661, 4674, 4678, 4679, 4680, 4694, 4706, 4708, 4742, 4744, 4745, 4764, 4765, 4780, 4791, 4799, 4803, 4805, 4809, 4813, 4814, 4816, 4823, 4825, 4838, 4844, 4849, 4858, 4868, 4871, 4874, 4876, 4883, 4891, 4893, 4897, 4898, 4907, 4914, 4917, 4919, 4926, 4941, 4944, 4947, 4958, 4966, 4974, 4986, 4987, 5000, 5004, 5007, 5014, 5026, 5031, 5066, 5099, 5135, 5160, 4015, 4029, 4030, 4034, 4035, 4042, 4053, 4057, 4058, 4061, 4077, 4079, 4094, 4096, 4114, 4115, 4122, 4131, 4138, 4162, 4167, 4169, 4170, 4171, 4187, 4189, 4194, 4197, 4203, 4210, 4214, 4219, 4229, 4240, 4243, 4244, 4250, 4251, 4263, 4287, 4293, 4294, 4300, 4302, 4303, 4311, 4324, 4346, 4354, 4359, 4363, 4366, 4377, 4381, 4394, 4395, 4402, 4403, 4406, 4408, 4414, 4423, 4426, 4430, 4432, 4444, 4456, 4458, 4462, 4489, 4502, 4507, 4510, 4515, 4521, 4524, 4531, 4538, 4542, 4543, 4548, 4562, 4564, 4582, 4584, 4590, 4595, 4596, 4605, 4611, 4622, 4626, 4629, 4630, 4631, 4633, 4636, 4646, 4653, 4654, 4668, 4671, 4675, 4689, 4711, 4712, 4713, 4714, 4715, 4720, 4721, 4722, 4723, 4729, 4736, 4741, 4743, 4746, 4750, 4757, 4767, 4769, 4777, 4782, 4784, 4793, 4796, 4798, 4804, 4806, 4807, 4815, 4817, 4842, 4852, 4857, 4862, 4869, 4873, 4877, 4885, 4888, 4889, 4896, 4899, 4902, 4903, 4904, 4909, 4918, 4920, 4922, 4925, 4928, 4929, 4936, 4943, 4945, 4955, 4960, 4976, 4985, 4989, 5047, 4001, 4009, 4024, 4039, 4089, 4095, 4136, 4152, 4153, 4172, 4192, 4195, 4201, 4209, 4211, 4215, 4223, 4252, 4258, 4280, 4282, 4307, 4338, 4353, 4373, 4379, 4477, 4494, 4500, 4501, 4526, 4546, 4549, 4568, 4583, 4589, 4591, 4615, 4625, 4641, 4657, 4660, 4672, 4676, 4686, 4692, 4696, 4707, 4718, 4719, 4728, 4730, 4732, 4733, 4737, 4740, 4755, 4756, 4770, 4772, 4774, 4783, 4792, 4801, 4802, 4820, 4827, 4845, 4853, 4859, 4863, 4867, 4879, 4887, 4892, 4894, 4905, 4906, 4910, 4911, 4912, 4924, 4938, 4940, 4949, 4954, 4959, 4962, 4963, 4964, 4968, 4971, 4980, 4982, 4984, 4990, 4992, 4994, 4997, 5005, 5006, 5012, 5013, 5015, 5016, 5017, 5018, 5019, 5027, 5028, 5029, 5032, 5037, 5038, 5054, 5056, 5057, 5058, 5059, 5062, 5063, 5067, 5070, 5071, 5087, 5090, 5095, 5106, 5112, 5119, 5120, 5123, 5138, 5146, 5162, 5165, 5184, 5187, 5196, 5205, 5206, 5208, 5210, 5224, 5231, 5240, 5241, 5251, 5252, 5275
#]

rids = [
    2, 5, 8, 14, 15, 16, 19, 21, 22, 23, 31, 35, 40, 43, 47, 48, 55, 56, 58, 59, 61, 66, 67, 68, 69, 70, 72, 74, 81, 86,
    89, 90, 95, 96, 97, 106, 113, 118, 120, 123, 125, 127, 130, 156, 159, 166, 171, 172, 173, 177, 184, 186, 196, 210, 223,
    229, 230, 232, 245, 257, 259, 260, 262, 272, 283, 295, 298, 301, 303, 304, 311, 312, 315, 319, 327, 337, 352, 359, 360,
    363, 369, 382, 386, 403, 405, 413, 416, 419, 420, 425, 433, 436, 441, 454, 459, 467, 472, 473, 479, 484, 488, 489, 493,
    498, 500, 502, 506, 516, 519, 520, 522, 525, 526, 533, 534, 538, 545, 548, 553, 555, 558, 559, 575, 576, 578, 601, 602,
    605, 610, 618, 622, 637, 640, 643, 647, 648, 657, 672, 677, 680, 681, 684, 685, 686, 692, 711, 717, 726, 731, 734, 741,
    751, 761, 767, 768, 778, 779, 810, 813, 818, 824, 842, 843, 845, 862, 863, 866, 876, 883, 886, 896, 898, 899, 907, 920,
    923, 926, 931, 934, 951, 963, 967, 969, 972, 981, 984, 985, 1002, 1009, 1013, 1014, 1016, 1021, 1023, 1035, 1063, 1086,
    1094, 1098, 1099, 1123, 1133, 1169, 1190, 1191, 1194, 1195, 1197, 1200, 1202, 1203, 1206, 1212, 1222, 1232, 1241, 1242,
    1249, 1250, 1251, 1256, 1261, 1267, 1276, 1280, 1286, 1288, 1301, 1306, 4, 6, 30, 33, 38, 41, 42, 44, 45, 50, 51, 54,
    57, 60, 77, 78, 80, 87, 98, 101, 102, 103, 107, 108, 111, 112, 116, 126, 128, 135, 138, 141, 142, 150, 155, 158, 160,
    161, 168, 169, 176, 178, 179, 182, 187, 188, 190, 195, 200, 204, 205, 214, 217, 222, 225, 227, 231, 240, 241, 243, 249,
    256, 258, 269, 273, 276, 282, 284, 285, 288, 289, 290, 291, 292, 293, 294, 296, 307, 314, 324, 325, 326, 331, 332, 336,
    339, 344, 351, 354, 361, 362, 376, 377, 378, 384, 388, 389, 390, 393, 394, 397, 401, 406, 407, 408, 409, 410, 414, 417,
    422, 423, 424, 429, 434, 442, 443, 445, 446, 448, 449, 450, 458, 461, 464, 469, 476, 478, 481, 485, 501, 505, 507, 511,
    513, 514, 518, 531, 539, 544, 546, 549, 551, 552, 557, 563, 566, 567, 568, 572, 579, 588, 590, 598, 604, 607, 608, 611,
    613, 621, 625, 626, 629, 631, 634, 638, 641, 644, 649, 656, 658, 667, 668, 669, 671, 673, 675, 679, 695, 697, 698, 702,
    708, 709, 715, 718, 721, 722, 723, 725, 727, 729, 746, 748, 750, 752, 769, 770, 771, 782, 783, 792, 800, 802, 821, 825,
    830, 832, 834, 835, 839, 851, 855, 856, 860, 861, 865, 867, 869, 871, 872, 873, 874, 878, 880, 887, 890, 892, 904, 906,
    908, 909, 912, 913, 914, 915, 917, 919, 921, 922, 924, 925, 928, 930, 932, 941, 945, 947, 950, 952, 954, 957, 958, 961,
    973, 976, 978, 982, 987, 989, 994, 995, 997, 1004, 1007, 1010, 1015, 1028, 1030, 1031, 1032, 1033, 1034, 1038, 1040,
    1043, 1045, 1046, 1051, 1052, 1054, 1057, 1066, 1070, 1072, 1073, 1074, 1075, 1077, 1078, 1080, 1088, 1092, 1097, 1103,
    1104, 1106, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1126, 1130, 1131, 1135, 1138, 1140, 1148, 1149, 1154, 1155,
    1165, 1168, 1175, 1182, 1183, 1186, 1187, 1188, 1199, 1204, 1210, 1211, 1213, 1215, 1217, 1218, 1224, 1225, 1226, 1227,
    1231, 1240, 1243, 1244, 1245, 1246, 1247, 1255, 1260, 1265, 1268, 1269, 1271, 1275, 1277, 1279, 1282, 1284, 1292, 1293,
    1294, 1295, 1299, 1300, 1309, 1311, 1314, 1315, 1318, 1321, 1322, 1326, 1330, 1331, 1338, 1340, 1343, 1346, 1350, 1351,
    1352, 1357, 1363, 1366, 1378, 1380, 1384, 1387, 1389, 1393, 1394, 1398, 1400, 1406, 1407, 1408, 1411, 1412, 1414, 1417,
    1418, 1419, 1420, 1421, 1423, 1425, 1426, 1427, 3, 7, 10, 29, 53, 76, 83, 84, 88, 91, 93, 94, 109, 110, 129, 139, 147,
    149, 162, 167, 183, 194, 213, 216, 219, 221, 228, 266, 286, 299, 300, 310, 316, 321, 328, 335, 341, 343, 356, 366, 370,
    372, 374, 392, 400, 404, 426, 431, 438, 457, 470, 474, 487, 492, 497, 517, 528, 535, 543, 547, 554, 565, 577, 592, 606,
    619, 627, 633, 642, 653, 682, 689, 690, 691, 696, 699, 712, 720, 724, 730, 733, 739, 740, 743, 747, 753, 754, 759, 760,
    777, 784, 786, 790, 793, 796, 803, 812, 814, 816, 828, 829, 836, 841, 844, 850, 852, 853, 884, 889, 891, 916, 929, 938,
    955, 956, 979, 991, 996, 999, 1001, 1018, 1024, 1027, 1037, 1041, 1044, 1055, 1056, 1059, 1062, 1079, 1081, 1082, 1083,
    1090, 1095, 1101, 1102, 1109, 1113, 1137, 1144, 1152, 1157, 1161, 1164, 1170, 1171, 1184, 1185, 1192, 1201, 1205, 1209,
    1221, 1248, 1253, 1254, 1257, 1262, 1263, 1281, 1283, 1285, 1289, 1290, 1296, 1304, 1307, 1308, 1334, 1337, 1339, 1341,
    1354, 1368, 1371, 1373, 1377, 1379, 1382, 1385, 1391, 1397, 1402, 1409, 1430, 1435
]


print(len(rids))

# Cargar el CSV
df = pd.read_csv(input_file)

filtered_df = df[(df["RID"].isin(rids)) & (df.iloc[:, 0] == "ADNI1")]

filtered_df = filtered_df.drop_duplicates()
# Guardar a un nuevo archivo
filtered_df.to_csv(r"C:\Users\Eric\Desktop\Novus Initium\Ars Discendi\TFG\TFG_ADNI.csv", index=False)
ptid_list = filtered_df["PTID"].tolist()
ptid_text = ",".join(ptid_list)

# Guardar el TXT
with open(r"C:\Users\Eric\Desktop\Novus Initium\Ars Discendi\TFG\TFG_PTID.txt", "w") as f:
    f.write(ptid_text)

print("Archivo filtrado guardado como TFG_ADNI.csv")
print("Archivo de PTIDs guardado como TFG_PTID.txt")



print("Buscamos coincidencias")

# 1. Cargar tus datos filtrados
filtered_csv= pd.read_csv(r"C:\Users\Eric\Desktop\Novus Initium\Ars Discendi\TFG\TFG_ADNI.csv")

# 2. Cargar el segundo archivo
adni1_df = pd.read_csv(r"C:\Users\Eric\Desktop\Novus Initium\Ars Discendi\TFG\ADNI1_Complete_1Yr_1.5T_4_26_2025.csv")

adni1_sc_df = adni1_df[adni1_df["Visit"] == "sc"]

# 4. Extraer las listas de PTID
filtered_ptids = set(filtered_df["PTID"])
print("PTID MIOS")

print(len(filtered_ptids))
adni1_ptids = set(adni1_sc_df["Subject"])
print(len(adni1_ptids))


# 4. Encontrar coincidencias
coincidencias = filtered_ptids.intersection(adni1_ptids)

# 5. Mostrar cuántas coincidencias hay
print(f"Número de PTIDs coincidentes: {len(coincidencias)}")


# 6. Buscar los PTID que no están en el archivo ADNI1
adni1_ptid_list = adni1_sc_df["Subject"].tolist()

# 7. Comparar los PTID de tus datos filtrados con los de ADNI1
non_matching_ptids = [ptid for ptid in ptid_list if ptid not in adni1_ptid_list]

print(f"Número de PTIDs NO coincidentes: {len(non_matching_ptids)}")


# 8. Guardar los PTID no coincidentes en un archivo de texto
non_matching_text = ",".join(map(str, non_matching_ptids))

with open(r"C:\Users\Eric\Desktop\Novus Initium\Ars Discendi\TFG\Non_Matching_PTID.txt", "w") as f:
    f.write(non_matching_text)

print("Archivo de PTIDs no coincidentes guardado como Non_Matching_PTID.txt")
